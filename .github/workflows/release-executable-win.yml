name: "publish"
on: 
  pull_request:
      branches:
        - main
jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.PACKAGE_VERSION}`,
              name: `FinalCypher Launcher v${process.env.PACKAGE_VERSION}`,
              body: 'FinalCypher Launcher App',
              draft: true,
              prerelease: false
            })
            
            return data.id

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        #cross-platform --> platform: [macos-latest, ubuntu-latest, windows-latest]
        platform: [windows-latest]
    env:
      working-directory: .

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0
        #sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: install app dependencies and build it
        run: yarn && yarn build
        working-directory: ${{env.working-directory}}
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          # tagName: finalcypher-launcher-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          # releaseName: "FinalCypher Launcher v__VERSION__"
          # releaseBody: "See the assets to download this version and install."
          # releaseDraft: true
          # prerelease: false
          # projectPath: ${{env.working-directory}}
          releaseId: ${{ needs.create-release.outputs.release_id }}
  
  publish-release-locally:
    runs-on: ubuntu-20.04
    needs: [ create-release, build-tauri ]
    
    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
            
  public-release:
    runs-on: ubuntu-20.04
    needs: [ create-release, build-tauri, publish-release-locally ]
    steps:
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          repository: station0x/FC-Launcher-Binaries
          token: ${{ secrets.FC_TOKEN }}
          tag_name: ${{ needs.create-release.outputs.release_id }}